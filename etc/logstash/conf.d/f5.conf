#CopyrightÂ©Tekium 2024. All rights reserved.
#Author: Erick Roberto Rodriguez Rodriguez
#Email: erodriguez@tekium.mx, erickrr.tbd93@gmail.com
#GitHub: https://github.com/erickrr-bd/Logstash-configurations
#Logstash configuration for F5 (ASM/WAF) v1.1 - April 2024

#NOTE: The fields must be configured on the application side in the order in which the information is parsed.

input {
}

filter{
        grok{
                match => {"message" => "\<%{NUMBER}\>%{SYSLOGTIMESTAMP:date}\s%{HOSTNAME:hostname}\s%{WORD}\:%{QUOTEDSTRING:date_time}\,%{QUOTEDSTRING:vs_name}\,%{QUOTEDSTRING:dest_ip}\,%{QUOTEDSTRING:dest_port}\,%{QUOTEDSTRING:attack_type}\,%{QUOTEDSTRING:support_id}\,%{QUOTEDSTRING:sig_ids}\,%{QUOTEDSTRING:uri}\,%{QUOTEDSTRING:username}\,%{QUOTEDSTRING:violation_details}\,%{QUOTEDSTRING:violations}\,%{QUOTEDSTRING:blocking_exception_reason}\,%{QUOTEDSTRING:geo_location}\,%{QUOTEDSTRING:ip_client}\,%{QUOTEDSTRING:method}\,%{QUOTEDSTRING:policy_name}\,%{QUOTEDSTRING:protocol}\,%{QUOTEDSTRING:src_port}\,%{QUOTEDSTRING:client_type}\,%{QUOTEDSTRING:conviction_traps}\,%{QUOTEDSTRING:credential_stuffing_lookup_result}\,%{QUOTEDSTRING:device_id}\,%{QUOTEDSTRING:enforced_by}\,%{QUOTEDSTRING:enforcement_action}\,%{QUOTEDSTRING:epoch_time}\,%{QUOTEDSTRING:fragment}\,%{QUOTEDSTRING:http_class_name}\,%{QUOTEDSTRING:ip_address_intelligence}\,%{QUOTEDSTRING:ip_with_route_domain}\,%{QUOTEDSTRING:is_truncated}\,%{QUOTEDSTRING:captcha_result}\,%{QUOTEDSTRING:likely_false_positive_sig_ids}\,%{QUOTEDSTRING:login_result}\,%{QUOTEDSTRING:management_ip_address}\,%{QUOTEDSTRING:microservice}\,%{QUOTEDSTRING:mobile_application_name}\,%{QUOTEDSTRING:mobile_application_version}\,%{QUOTEDSTRING:operation_id}\,%{QUOTEDSTRING:password_hash_prefix}\,%{QUOTEDSTRING:policy_apply_date}\,%{QUOTEDSTRING:protocol_info}\,%{QUOTEDSTRING:query_string}\,%{QUOTEDSTRING:response}\,%{QUOTEDSTRING:response_code}\,%{QUOTEDSTRING:route_domain}\,%{QUOTEDSTRING:session_id}\,%{QUOTEDSTRING:severity}\,%{QUOTEDSTRING:sig_cves}\,%{QUOTEDSTRING:sig_names}\,%{QUOTEDSTRING:sig_set_names}\,%{QUOTEDSTRING:slot_number}\,%{QUOTEDSTRING:staged_sig_cves}\,%{QUOTEDSTRING:staged_sig_ids}\,%{QUOTEDSTRING:staged_sig_names}\,%{QUOTEDSTRING:staged_sig_set_names}\,%{QUOTEDSTRING:sub_violations}\,%{QUOTEDSTRING:tap_event_id}\,%{QUOTEDSTRING:tap_sent_token}\,%{QUOTEDSTRING:tap_transaction_id}\,%{QUOTEDSTRING:tap_vid}\,%{QUOTEDSTRING:threat_campaign_names}\,%{QUOTEDSTRING:unit_hostname}\,%{QUOTEDSTRING:violation_rating}\,%{QUOTEDSTRING:websocket_direction}\,%{QUOTEDSTRING:management_ip_address_2}\,%{QUOTEDSTRING:staged_threat_campaign_names}\,%{QUOTEDSTRING:tap_requested_action}\,%{QUOTEDSTRING:x_forwarded_for_header_value}\,%{QUOTEDSTRING:virus_name}\,%{QUOTEDSTRING:websocket_message_type}\,%{GREEDYDATA:request}"}
                remove_field => ["message"]
        }
        if "_grokparsefailure" in [tags]{
                mutate{
                        gsub => ["message", '\\"', '"']
                }
                grok{
                        match => {"message" => "\<%{NUMBER}\>%{SYSLOGTIMESTAMP:date}\s%{HOSTNAME:hostname}\s%{WORD}\:%{QUOTEDSTRING:date_time}\,%{QUOTEDSTRING:vs_name}\,%{QUOTEDSTRING:dest_ip}\,%{QUOTEDSTRING:dest_port}\,%{QUOTEDSTRING:attack_type}\,%{QUOTEDSTRING:support_id}\,%{QUOTEDSTRING:sig_ids}\,%{QUOTEDSTRING:uri}\,%{QUOTEDSTRING:username}\,%{QUOTEDSTRING:violation_details}\,%{QUOTEDSTRING:violations}\,%{QUOTEDSTRING:blocking_exception_reason}\,%{QUOTEDSTRING:geo_location}\,%{QUOTEDSTRING:ip_client}\,%{QUOTEDSTRING:method}\,%{QUOTEDSTRING:policy_name}\,%{QUOTEDSTRING:protocol}\,%{QUOTEDSTRING:src_port}\,%{QUOTEDSTRING:client_type}\,%{QUOTEDSTRING:conviction_traps}\,%{QUOTEDSTRING:credential_stuffing_lookup_result}\,%{QUOTEDSTRING:device_id}\,%{QUOTEDSTRING:enforced_by}\,%{QUOTEDSTRING:enforcement_action}\,%{QUOTEDSTRING:epoch_time}\,%{QUOTEDSTRING:fragment}\,%{QUOTEDSTRING:http_class_name}\,%{QUOTEDSTRING:ip_address_intelligence}\,%{QUOTEDSTRING:ip_with_route_domain}\,%{QUOTEDSTRING:is_truncated}\,%{QUOTEDSTRING:captcha_result}\,%{QUOTEDSTRING:likely_false_positive_sig_ids}\,%{QUOTEDSTRING:login_result}\,%{QUOTEDSTRING:management_ip_address}\,%{QUOTEDSTRING:microservice}\,%{QUOTEDSTRING:mobile_application_name}\,%{QUOTEDSTRING:mobile_application_version}\,%{QUOTEDSTRING:operation_id}\,%{QUOTEDSTRING:password_hash_prefix}\,%{QUOTEDSTRING:policy_apply_date}\,%{QUOTEDSTRING:protocol_info}\,%{QUOTEDSTRING:query_string}\,%{QUOTEDSTRING:response}\,%{QUOTEDSTRING:response_code}\,%{QUOTEDSTRING:route_domain}\,%{QUOTEDSTRING:session_id}\,%{QUOTEDSTRING:severity}\,%{QUOTEDSTRING:sig_cves}\,%{QUOTEDSTRING:sig_names}\,%{QUOTEDSTRING:sig_set_names}\,%{QUOTEDSTRING:slot_number}\,%{QUOTEDSTRING:staged_sig_cves}\,%{QUOTEDSTRING:staged_sig_ids}\,%{QUOTEDSTRING:staged_sig_names}\,%{QUOTEDSTRING:staged_sig_set_names}\,%{QUOTEDSTRING:sub_violations}\,%{QUOTEDSTRING:tap_event_id}\,%{QUOTEDSTRING:tap_sent_token}\,%{QUOTEDSTRING:tap_transaction_id}\,%{QUOTEDSTRING:tap_vid}\,%{QUOTEDSTRING:threat_campaign_names}\,%{QUOTEDSTRING:unit_hostname}\,%{QUOTEDSTRING:violation_rating}\,%{QUOTEDSTRING:websocket_direction}\,%{QUOTEDSTRING:management_ip_address_2}\,%{QUOTEDSTRING:staged_threat_campaign_names}\,%{QUOTEDSTRING:tap_requested_action}\,%{QUOTEDSTRING:x_forwarded_for_header_value}\,%{QUOTEDSTRING:virus_name}\,%{QUOTEDSTRING:websocket_message_type}\,%{GREEDYDATA:request}"}
                        remove_field => ["message", "tags"]
                }
                if "_grokparsefailure" in [tags]{
                        grok{
                                match => {"message" => "\<%{NUMBER}\>%{SYSLOGTIMESTAMP:date}\s%{HOSTNAME:hostname}\s%{WORD}\:%{QUOTEDSTRING:date_time}\,%{QUOTEDSTRING:vs_name}\,%{QUOTEDSTRING:dest_ip}\,%{QUOTEDSTRING:dest_port}\,%{QUOTEDSTRING:attack_type}\,%{QUOTEDSTRING:support_id}\,%{QUOTEDSTRING:sig_ids}\,%{QUOTEDSTRING:uri}\,%{QUOTEDSTRING:username}\,%{QUOTEDSTRING:violation_details}\,%{QUOTEDSTRING:violations}\,%{QUOTEDSTRING:blocking_exception_reason}\,%{QUOTEDSTRING:geo_location}\,%{QUOTEDSTRING:ip_client}\,%{QUOTEDSTRING:method}\,%{QUOTEDSTRING:policy_name}\,%{QUOTEDSTRING:protocol}\,%{QUOTEDSTRING:src_port}\,%{QUOTEDSTRING:client_type}\,%{QUOTEDSTRING:conviction_traps}\,%{QUOTEDSTRING:credential_stuffing_lookup_result}\,%{QUOTEDSTRING:device_id}\,%{QUOTEDSTRING:enforced_by}\,%{QUOTEDSTRING:enforcement_action}\,%{QUOTEDSTRING:epoch_time}\,%{QUOTEDSTRING:fragment}\,%{QUOTEDSTRING:http_class_name}\,%{QUOTEDSTRING:ip_address_intelligence}\,%{QUOTEDSTRING:ip_with_route_domain}\,%{QUOTEDSTRING:is_truncated}\,%{QUOTEDSTRING:captcha_result}\,%{QUOTEDSTRING:likely_false_positive_sig_ids}\,%{QUOTEDSTRING:login_result}\,%{QUOTEDSTRING:management_ip_address}\,%{QUOTEDSTRING:microservice}\,%{QUOTEDSTRING:mobile_application_name}\,%{QUOTEDSTRING:mobile_application_version}\,%{QUOTEDSTRING:operation_id}\,%{QUOTEDSTRING:password_hash_prefix}\,%{QUOTEDSTRING:policy_apply_date}\,%{QUOTEDSTRING:protocol_info}\,%{QUOTEDSTRING:query_string}\,%{QUOTEDSTRING:response}\,%{QUOTEDSTRING:response_code}\,%{QUOTEDSTRING:route_domain}\,%{QUOTEDSTRING:session_id}\,%{QUOTEDSTRING:severity}\,%{QUOTEDSTRING:sig_cves}\,%{GREEDYDATA:aux_msg}"}
                        }
                        mutate{
                                gsub => ["aux_msg", '""', "'"]
                        }
                        grok{
                                match => {"aux_msg" => "%{QUOTEDSTRING:sig_names}\,%{QUOTEDSTRING:sig_set_names}\,%{QUOTEDSTRING:slot_number}\,%{QUOTEDSTRING:staged_sig_cves}\,%{QUOTEDSTRING:staged_sig_ids}\,%{QUOTEDSTRING:staged_sig_names}\,%{QUOTEDSTRING:staged_sig_set_names}\,%{QUOTEDSTRING:sub_violations}\,%{QUOTEDSTRING:tap_event_id}\,%{QUOTEDSTRING:tap_sent_token}\,%{QUOTEDSTRING:tap_transaction_id}\,%{QUOTEDSTRING:tap_vid}\,%{QUOTEDSTRING:threat_campaign_names}\,%{QUOTEDSTRING:unit_hostname}\,%{QUOTEDSTRING:violation_rating}\,%{QUOTEDSTRING:websocket_direction}\,%{QUOTEDSTRING:management_ip_address_2}\,%{QUOTEDSTRING:staged_threat_campaign_names}\,%{QUOTEDSTRING:tap_requested_action}\,%{QUOTEDSTRING:x_forwarded_for_header_value}\,%{QUOTEDSTRING:virus_name}\,%{QUOTEDSTRING:websocket_message_type}\,%{GREEDYDATA:request}"}
                                remove_field => ["message", "tags", "aux_msg"]
                        }
                        if "_grokparsefailure" in [tags]{
                                mutate{
                                        gsub => ["aux_msg", "'\"", '"']
                                }
                                grok{
                                        match => {"aux_msg" => "%{QUOTEDSTRING:sig_names}\,%{QUOTEDSTRING:sig_set_names}\,%{QUOTEDSTRING:slot_number}\,%{QUOTEDSTRING:staged_sig_cves}\,%{QUOTEDSTRING:staged_sig_ids}\,%{QUOTEDSTRING:staged_sig_names}\,%{QUOTEDSTRING:staged_sig_set_names}\,%{QUOTEDSTRING:sub_violations}\,%{QUOTEDSTRING:tap_event_id}\,%{QUOTEDSTRING:tap_sent_token}\,%{QUOTEDSTRING:tap_transaction_id}\,%{QUOTEDSTRING:tap_vid}\,%{QUOTEDSTRING:threat_campaign_names}\,%{QUOTEDSTRING:unit_hostname}\,%{QUOTEDSTRING:violation_rating}\,%{QUOTEDSTRING:websocket_direction}\,%{QUOTEDSTRING:management_ip_address_2}\,%{QUOTEDSTRING:staged_threat_campaign_names}\,%{QUOTEDSTRING:tap_requested_action}\,%{QUOTEDSTRING:x_forwarded_for_header_value}\,%{QUOTEDSTRING:virus_name}\,%{QUOTEDSTRING:websocket_message_type}\,%{GREEDYDATA:request}"}
                                        #remove_field => ["message", "tags", "aux_msg"]
                                }       
                        }
                }
        }
        mutate{
                strip => ["request"]
        }
}

output {
}