# Author: Erick Roberto Rodriguez Rodriguez
# Email: erodriguez@tekium.mx, erickrr.tbd93@gmail.com
# GitHub: https://github.com/erickrr-bd/Logstash-configurations
# Logstash configuration for Nutanix v1.1 - July 2025

input {
}

filter {
    if [message] =~ /Genesis/ and [message] =~ /ICMP/ {
        dissect {
            mapping => {
            	"message" => "<%{priority}>%{DATE} %{HOSTNAME} %{APP_ID}: %{LOG_LEVEL}:%{APP_TIMESTAMP} [%{UUID}] %{APPLICATION} [%{APP_ACTION}] SRC=%{SRC} DST=%{DST} PROTO=%{PROTO} ID=%{ID} TYPE=%{TYPE} CODE=%{CODE} ACTION=%{ACTION} DIRECTION=%{DIRECTION} ORIG: PKTS=%{ORIG_PKTS} BYTES=%{ORIG_BYTES} REPLY: PKTS=%{REPLY_PKTS} BYTES=%{REPLY_BYTES}"
            }
        }
        mutate {
            convert => {
                "ID" => "integer"
                "TYPE" => "integer"
                "CODE" => "integer"
                "ORIG_PKTS" => "integer"
                "ORIG_BYTES" => "integer"
                "REPLY_PKTS" => "integer"
                "REPLY_BYTES" => "integer"
            }
        }
    }
    else if [message] =~ /Genesis/ and [message] =~ /TCP|UDP/ {
        dissect {
            mapping => {
            	"message" => "<%{priority}>%{DATE} %{HOSTNAME} %{APP_ID}: %{LOG_LEVEL}:%{APP_TIMESTAMP} [%{UUID}] %{APPLICATION} [%{APP_ACTION}] SRC=%{SRC} DST=%{DST} PROTO=%{PROTO} SPORT=%{SPORT} DPORT=%{DPORT} ACTION=%{ACTION} DIRECTION=%{DIRECTION} ORIG: PKTS=%{ORIG_PKTS} BYTES=%{ORIG_BYTES} REPLY: PKTS=%{REPLY_PKTS} BYTES=%{REPLY_BYTES}"
            }
        }   
        mutate {
            convert => {
                "SPORT" => "integer"
                "DPORT" => "integer"
                "ORIG_PKTS" => "integer"
                "ORIG_BYTES" => "integer"
                "REPLY_PKTS" => "integer"
                "REPLY_BYTES" => "integer"
            }
        }
    }
    else if [message] =~ /consolidated_audit/ {
        dissect {
            mapping => {
            	"message" => "<%{priority}>%{timestamp} %{hostname} %{app_name}: %{aux_json}"
            }
        }
        json {
            source => "aux_json"
            target => "format_json"
        }
        mutate {
            convert => {
                "[format_json][creationTimestampUsecs]" => "integer"
                "[format_json][opStartTimestampUsecs]" => "integer"
                "[format_json][opEndTimestampUsecs]" => "integer"
            }
        }
    }
    else if [message] =~ /flow_service_logs/ {
        dissect {
            mapping => {
				"message" => "<%{priority}>%{timestamp} %{hostname} %{app_name}: %{aux_msg}"
            }
        }
        mutate {
            gsub => ["aux_msg", "(\S+=)", "|\1"]
        }
        kv {
            source => "aux_msg"
            value_split => "="
            field_split_pattern => "\|+"
            trim_value => "\s"
        }
    }
    mutate{
        remove_field => ["priority", "aux_json", "message", "aux_msg"]
    }
}

output {
}